agent {
  stopCondition = "SYSTEM_IN_STOP" // INFINITY, TIMEOUT, SYSTEM_IN_STOP
  maxRunningTime = 4 seconds
  stopCommand = "stop"
  input {
    type = "FILE_TAILER" // FILE_READER, FILE_TAILER
    filePath = "../data/spark-yarn-perm/yarn/yarn-yarn-nodemanager-localhost.localdomain.log"
    startFromTheEnd = false
  }
  output {
    type = "CONSOLE" // CONSOLE, KAFKA, FILE or DISCARDER
    filePath = "output/events.out"
    topic = "log-events"
    bootstrapServer = "localhost:9092"
  }
  features {
    logFile = "NODE_MANAGER"
    server = "localhost"
    regex = "^(.{23}) ([A-Z]+)\\s+([a-zA-Z.]+).*\\(([0-9]+)\\)\\) - (.*)$"
    keys = ["timestamp", "severity", "loggingClass", "lineNumber", "message"]
    applyParameterParsing = true
    parameterExtractionRules = [{
      loggingClass = "yarn.YarnShuffleService"
      lineNumber = 192
      regex = "^Initializing container ([a-zA-Z0-9_]+)$"
      keys = ["containerId"]
    }, {
      loggingClass = "monitor.ContainersMonitorImpl"
      lineNumber = 499
      regex = "^Memory usage of ProcessTree ([0-9]+) for container-id ([a-zA-Z0-9_]+): ([0-9.]+ [M|G]B) of ([0-9.]+ [M|G]B) physical memory used; ([0-9.]+ [M|G]B) of ([0-9.]+ [M|G]B) virtual memory used$"
      keys = ["processTree", "containerId", "actualPhysicalMemory", "configuredPhysicalMemory", "actualVirtualMemory", "configuredVirtualMemory"]
    }, {
      loggingClass = "yarn.YarnShuffleService"
      lineNumber = 198
      regex = "^Stopping container ([a-zA-Z0-9_]+)$"
      keys = ["containerId"]
    }]
  }
}